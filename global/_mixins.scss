// Responsive Breakpoints
// ========================================================================
@mixin min($point) {
	@if $point == superman {
		@media (min-width: $superman) { @content; }
	}
	@else if $point == batman {
		@media (min-width: $batman) { @content; }
	}
	@else if $point == robin {
		@media (min-width: $robin)  { @content; }
	}
}

@mixin max($point) {
  @if $point == superman {
    @media (max-width: $superman) { @content; }
  }
  @else if $point == batman {
    @media (max-width: $batman) { @content; }
  }
  @else if $point == robin {
    @media (max-width: $robin)  { @content; }
  }
}

// Retina Images
// ========================================================================
@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
		   (-o-min-device-pixel-ratio: 2.6/2),
		   (-webkit-min-device-pixel-ratio: 1.3),
		   (min-device-pixel-ratio: 1.3),
		   (min-resolution: 1.3dppx) {

		/* on retina, use image that's scaled by 2 */
		background-image: url($image);
		background-size: $width $height;
	}
}

// Clearfix
// ========================================================================
@mixin clearfix() {
    & {
        *zoom: 1;
    }
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Absolute Positioned
// ========================================================================
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
	position: absolute;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

// Fixed Positioned
// ========================================================================
@mixin fix-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
	position: fixed;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

// Width & Height
// ========================================================================
@mixin wh($width: auto, $height: auto) {
	width: $width;
	height: $height;
}

// Image Replacement
// ========================================================================
@mixin ir {
    background-color: transparent;
    border: 0;
    overflow: hidden;
    /* IE 6/7 fallback */
    *text-indent: -9999px;

	&:before {
	    content: "";
	    display: block;
	    width: 0;
	    height: 150%;
	}
}

// Text Overflow
// ========================================================================
%text-truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

// Center-align a block level element
// ========================================================================
%center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}